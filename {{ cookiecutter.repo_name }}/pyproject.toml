[build-system]
requires = ["hatchling>=1.11.0"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.repo_name }}"
description = "{{ cookiecutter.description }}"
authors = [
    { author = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"},
]
readme = "README.md"
packages = [{ include = "{{ cookiecutter.repo_name }}", from = "src" }]
requires-python = ">={{ cookiecutter.python_version}}"
classifiers = [
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: {{ cookiecutter.python_version }}",
]
dependencies = [
    "typer[all]>=0.7.0",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "black==23.1.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.0.0,<2.0.0",
    "ruff==0.0.251",
    "pytest>=7.2.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
]
doc = [
    "mkdocs>=1.4.2,<2.0.0",
    "mkdocs-material >=9.0.13,<10.0.0",
    "mkdocs-typer>=0.0.2",
    "mkdocstrings>=0.20.0",
]
dev = [
    "pre-commit>=3.0.4,<4.0.0",
]

[project.scripts]
{{ cookiecutter.repo_name }} = "{{ cookiecutter.repo_name }}.cli:main"

[tool.hatch.version]
path = "src/{{ cookiecutter.repo_name }}/__version__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "data",
    "docs",
    "models",
    "notebooks",
    "reports",
    "tests"
]

[tool.black]
line-length = 99
target-version = ["py{{ cookiecutter.python_version|replace('.', '') }}",]


[tool.ruff]
target-version = "py{{ cookiecutter.python_version|replace('.', '') }}"
line-length = 99
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    # "I",  # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Don't touch unused imports

[tool.ruff.isort]
known-first-party = ["{{ cookiecutter.repo_name }}"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
files = ["src/{{ cookiecutter.repo_name }}"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["error"]

[tool.coverage.run]
branch = true
source_pkgs = [
    "{{ cookiecutter.repo_name }}",
    "tests",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
